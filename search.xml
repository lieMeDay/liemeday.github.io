<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微信小程序使用 wxparse 腾讯视频插件 解析 iframe腾讯视频</title>
      <link href="2021/01/20/wxparsetxsp/"/>
      <url>2021/01/20/wxparsetxsp/</url>
      
        <content type="html"><![CDATA[<p>修改wxparse的源码</p><h4 id="1-支持iframe的转化"><a href="#1-支持iframe的转化" class="headerlink" title="1.支持iframe的转化"></a>1.支持iframe的转化</h4><p>首先在html2json.js文件中支持iframe的转化，因为小程序默认就不支持iframe所以在源码中并没有iframe的转化，需要我们自己添加</p><p>可以看到之前源码对于img标签的处理，我们就照猫画虎对于iframe进行处理</p><p>并取出有效的vid以便之后的程序视频插件使用。</p><p>html2json.js文件修改：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">.</span> <span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token comment">//对img添加额外数据</span><span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">'img'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    node<span class="token punctuation">.</span>imgIndex <span class="token operator">=</span> results<span class="token punctuation">.</span>images<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">var</span> imgUrl <span class="token operator">=</span> node<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>src<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>imgUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>imgUrl<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        imgUrl<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    imgUrl <span class="token operator">=</span> wxDiscode<span class="token punctuation">.</span><span class="token function">urlToHttpUrl</span><span class="token punctuation">(</span>imgUrl<span class="token punctuation">,</span> __placeImgeUrlHttps<span class="token punctuation">)</span><span class="token punctuation">;</span>                node<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>src <span class="token operator">=</span> imgUrl<span class="token punctuation">;</span>                node<span class="token punctuation">.</span>from <span class="token operator">=</span> bindName<span class="token punctuation">;</span>                results<span class="token punctuation">.</span>images<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>                results<span class="token punctuation">.</span>imageUrls<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>imgUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token comment">// 下面是需要我们添加的代码</span> <span class="token comment">// 处理iframe的地址，取出vid并放入数据中，</span> <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">'iframe'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">// safeGetValue 只是一个取值的函数，可自行编写自己的取值函数。</span>     node<span class="token punctuation">.</span>vid <span class="token operator">=</span> <span class="token function">safeGetValue</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> node<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>src<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">https:\/\/v\.qq\.com.*vid=(\w*)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">.</span> <span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token comment">// 此函数作用类似于ramda的path和pathOr，用于安全取值。</span><span class="token keyword">function</span> <span class="token function">safeGetValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> argsLength <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length   <span class="token keyword">if</span> <span class="token punctuation">(</span>argsLength <span class="token operator">!==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> argsLength <span class="token operator">!==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">throw</span> <span class="token string">'必须为两个或者三个参数'</span>  <span class="token punctuation">}</span>  <span class="token keyword">var</span> defaultValue  <span class="token keyword">if</span> <span class="token punctuation">(</span>argsLength <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> <span class="token punctuation">[</span>_defaultValue<span class="token punctuation">,</span> keys<span class="token punctuation">,</span> item<span class="token punctuation">]</span> <span class="token operator">=</span> arguments    defaultValue <span class="token operator">=</span> _defaultValue  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> <span class="token punctuation">[</span>keys<span class="token punctuation">,</span> item<span class="token punctuation">]</span> <span class="token operator">=</span> arguments  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">throw</span> <span class="token string">'参数有误，取值的keys必须为数组'</span>  <span class="token punctuation">}</span>   <span class="token keyword">try</span> <span class="token punctuation">{</span>    keys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>      item <span class="token operator">=</span> item<span class="token punctuation">[</span>key<span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> defaultValue  <span class="token punctuation">}</span>  <span class="token keyword">return</span> item<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-在wxParse-wxml添加腾讯视频插件的模板"><a href="#2-在wxParse-wxml添加腾讯视频插件的模板" class="headerlink" title="2.在wxParse.wxml添加腾讯视频插件的模板"></a>2.在wxParse.wxml添加腾讯视频插件的模板</h4><p>实际在 tmpl.wxml下添加<br>在html2json中保存的vid属性，在这时有了用处</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wxParserVideo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.classStr}} wxParser-{{item.tag}}<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">{</span><span class="token punctuation">{</span>item.styleStr<span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.classStr}} wxParser-{{item.tag}}-video<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.attr.src}}<span class="token punctuation">"</span></span>      <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.attr.controls}}<span class="token punctuation">"</span></span> <span class="token attr-name">autoplay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.attr.autoplay}}<span class="token punctuation">"</span></span> <span class="token attr-name">loop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.attr.loop}}<span class="token punctuation">"</span></span>      <span class="token attr-name">muted</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.attr.muted}}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>// 增加腾讯视频插件模板<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wxPraseIframe2TencentVideoPlugin<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>txv-video</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">playerid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>txv{{item.vid}}<span class="token punctuation">"</span></span> <span class="token attr-name">vid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.vid}}<span class="token punctuation">"</span></span> <span class="token attr-name">autoplay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.attr.autoplay}}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>txv-video</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-修改wxParse-wxml的循环模板-添加视频插件的模板"><a href="#3-修改wxParse-wxml的循环模板-添加视频插件的模板" class="headerlink" title="3.修改wxParse.wxml的循环模板,添加视频插件的模板"></a>3.修改wxParse.wxml的循环模板,添加视频插件的模板</h4><p>中间的腾讯视频插件正是我们需要添加的。</p><p>ps: 循环模板在源码中有20个，需要我们把每一个循环模板中都添加插件，这样才能保证你的视频能够正常播放。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wxParse0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--video类型--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>block</span> <span class="token attr-name"><span class="token namespace">wx:</span>elif</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.tag == <span class="token punctuation">'</span>video<span class="token punctuation">'</span>}}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wxParseVideo<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item}}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>block</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--  放这个即可 大概有20处 --&gt;</span>    <span class="token comment">&lt;!--腾讯视频插件--&gt;</span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>block</span> <span class="token attr-name"><span class="token namespace">wx:</span>elif</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.tag == <span class="token punctuation">'</span>iframe<span class="token punctuation">'</span>}}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wxPraseIframe2TencentVideoPlugin<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item}}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>block</span><span class="token punctuation">&gt;</span></span>     <span class="token comment">&lt;!--img类型--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>block</span> <span class="token attr-name"><span class="token namespace">wx:</span>elif</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.tag == <span class="token punctuation">'</span>img<span class="token punctuation">'</span>}}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wxParseImg<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item}}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>block</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>````#### 4.记得引入腾讯视频插件在小程序后台 设置=》第三方设置 =》 添加插件 （腾讯视频）在 app.json中引用插件在wxParse.json引入 ```json"usingComponents": {    "txv-video":"plugin://tencentvideo/video"  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/lieMeDay/wxParse">git已整理好，只需在app.json引入腾讯视频插件即可，点击直达</a></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css 自定义滚动条颜色</title>
      <link href="2021/01/15/cssscroll/"/>
      <url>2021/01/15/cssscroll/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">针对webkit内核的浏览器，使用伪类来改变滚动条的默认样式<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="滚动条组成部分"><a href="#滚动条组成部分" class="headerlink" title="滚动条组成部分"></a>滚动条组成部分</h4><ul><li><p> ::-webkit-scrollbar 滚动条整体部分</p></li><li><p>. ::-webkit-scrollbar-thumb 滚动条里面的小方块，能向上向下移动（或向左向右移动）</p></li><li><p>::-webkit-scrollbar-track 滚动条的轨道（里面装有Thumb）</p></li><li><p>::-webkit-scrollbar-button 滚动条的轨道的两端按钮，由于通过点击微调小方块的位置。</p></li><li><p> ::-webkit-scrollbar-track-piece 内层轨道，滚动条中间部分</p></li><li><p> ::-webkit-scrollbar-corner 边角，即垂直滚动条和水平滚动条相交的地方</p></li><li><p>::-webkit-resizer 两个滚动条的交汇处上用于拖动调整元素大小的小控件</p></li></ul><p><img src="https://liemeday.github.io/blogPic/20210115112500/1.png" alt="1"></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*滚动条整体样式*/</span><span class="token selector">.wrap::-webkit-scrollbar</span> <span class="token punctuation">{</span>   <span class="token property">width</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*滚动条里面小方块*/</span><span class="token selector">.wrap::-webkit-scrollbar-thumb</span> <span class="token punctuation">{</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 0 5px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #60c5ff<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*滚动条里面轨道*/</span><span class="token selector">.wrap::-webkit-scrollbar-track</span> <span class="token punctuation">{</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 0 5px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/* border-radius: 10px; */</span>  <span class="token comment">/* background: #ededed; */</span>  <span class="token comment">/* background: #60c5ff; */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果<br>![2](<a href="https://liemeday.github.io/blogPic/20210115112500/2.png">https://liemeday.github.io/blogPic/20210115112500/2.png</a> =100x200)</p><h6 id="注意只在chrome下有效！"><a href="#注意只在chrome下有效！" class="headerlink" title="注意只在chrome下有效！"></a>注意只在chrome下有效！</h6>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-cli 3 脚手架搭建（create）</title>
      <link href="2021/01/11/createvue/"/>
      <url>2021/01/11/createvue/</url>
      
        <content type="html"><![CDATA[<p>地址：<a href="https://cli.vuejs.org/zh/guide/">https://cli.vuejs.org/zh/guide/</a><br>1.npm install -g @vue/cli</p><p>2.vue create hello-world // 项目名称</p><p>终端：（上下键选择）</p><ul><li><p>default (bable，eslint） // 默认</p></li><li><p>Manually select features // 手动 **选择手动创建项目回车<br>终端：（上下键移动键，空格键是否选中）<br>? Please pick a preset: Manually select features<br>? Check the features needed for your project:</p></li><li><p>(*) Babel</p></li><li><p>( ) TypeScript // 语法</p></li><li><p>( ) Progressive Web App (PWA) Support // PWA</p></li><li><p>(*) Router // 路由</p></li><li><p>() Vuex // store</p></li><li><p>( ) CSS Pre-processors // 预编译</p></li><li><p>() Linter / Formatter // 格式化代码</p></li><li><p>( ) Unit Testing</p></li><li><p>( ) E2E Testing<br>回车<br>终端：<br>? Please pick a preset: Manually select features // 手动创建项目<br>? Check the features needed for your project: Babel, Router, Vuex, CSS Pre-processors, Linter<br>? Use history mode for router? (Requires proper server setup for index fallback in production) Yes<br>//在生产中需要适当的服务器设置用于索引回退<br>? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): Sass/SCSS<br>// css 预编译<br>? Pick a linter / formatter config: Prettier // (ESLint + Prettier)格式化程序配置<br>? Pick additional lint features: Lint on save // 保存即检查格式<br>? Where do you prefer placing config for Babel, PostCSS, ESLint, etc.? In dedicated config files<br>// 其他配置数据单独存放再一个配置文件内<br>? Save this as a preset for future projects? Yes<br>// 是否保存这个项目的配置<br>? Save preset as: SaveVue3.0<br>// 是的话 项目命名假设为：createVue3.0 下一次可直接选择这个模板创建</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度地图给多个点添加信息窗口 点击事件</title>
      <link href="2021/01/07/bdinfo/"/>
      <url>2021/01/07/bdinfo/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span><span class="token string">'container'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">centerAndZoom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">116.404</span><span class="token punctuation">,</span> <span class="token number">39.928</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">enableScrollWheelZoom</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> pp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> lng<span class="token operator">:</span> <span class="token number">116.404</span><span class="token punctuation">,</span> lat<span class="token operator">:</span> <span class="token number">39.925</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lng<span class="token operator">:</span> <span class="token number">116.404</span><span class="token punctuation">,</span> lat<span class="token operator">:</span> <span class="token number">39.915</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lng<span class="token operator">:</span> <span class="token number">116.395</span><span class="token punctuation">,</span> lat<span class="token operator">:</span> <span class="token number">39.935</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lng<span class="token operator">:</span> <span class="token number">116.415</span><span class="token punctuation">,</span> lat<span class="token operator">:</span> <span class="token number">39.931</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>    <span class="token comment">// 创建点标记</span>    <span class="token keyword">var</span> opts <span class="token operator">=</span> <span class="token punctuation">{</span>        width<span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>     <span class="token comment">// 信息窗口宽度</span>        height<span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>     <span class="token comment">// 信息窗口高度</span>    title <span class="token operator">:</span> <span class="token string">"故宫博物院"</span> <span class="token punctuation">,</span> <span class="token comment">// 信息窗口标题</span>    message<span class="token operator">:</span><span class="token string">"这里是故宫"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> pp<span class="token punctuation">.</span>length<span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> <span class="token constant">P</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span>pp<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span>lng<span class="token punctuation">,</span> pp<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span>lat<span class="token punctuation">)</span>        <span class="token keyword">var</span> <span class="token constant">MP</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Marker</span><span class="token punctuation">(</span><span class="token constant">P</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">addOverlay</span><span class="token punctuation">(</span><span class="token constant">MP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token string">"地址：北京市东城区王府井大街"</span> <span class="token operator">+</span> a        <span class="token function">addClickHandler</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token constant">MP</span><span class="token punctuation">,</span> <span class="token constant">P</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">addClickHandler</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> marker<span class="token punctuation">,</span> p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        marker<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> infoWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>InfoWindow</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 创建信息窗口对象 </span>            map<span class="token punctuation">.</span><span class="token function">openInfoWindow</span><span class="token punctuation">(</span>infoWindow<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//开启信息窗口</span>        <span class="token punctuation">}</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://liemeday.github.io/blogPic/20210107150110/1.png" alt="效果图"></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序canvas头像不显示</title>
      <link href="2021/01/06/xiao-cheng-xu-tou-xiang/"/>
      <url>2021/01/06/xiao-cheng-xu-tou-xiang/</url>
      
        <content type="html"><![CDATA[<p>小程序生成二维码分享，真机没问题，但正式版头像却出不来<br>微信有一部分从第三方引入的用户头像是 <font color="red"><a href="https://thirdwx.qlogo.cn/">https://thirdwx.qlogo.cn</a></font>或<font color="red"><a href="https://wx.qlogo.cn/">https://wx.qlogo.cn</a></font> 开头的路径<br>canvas画头像需要先wx.getImageInfo获取下来，这个时候就可能会出现问题，那就是合法域名<br><img src="https://liemeday.github.io/blogPic/20210106153003/1.png" alt="1"><br>这个时候只能去<a href="https://mp.weixin.qq.com/">微信公众平台</a>去添加合法域名<br>具体：开发=》开发管理=》开发设置=》服务器域名 添加 <a href="https://wx.qlogo.cn/">https://wx.qlogo.cn</a><br>但是头像地址头可能是两种(MMP)<br>这个两种是通用的，应该是有ng转发配置，就是说他们可以互相调换<br>比如 <a href="https://wx.qlogo.cn/mmopen/vi_32/F6Cr8ib2GJtuFBSK64paqm6s11gz2AnpCcf6H5a7L3NsH6QgoiaEYGicIVglVxyYl5WaY6ceicxTIgcojydvfgyAZw/132">https://wx.qlogo.cn/mmopen/vi_32/F6Cr8ib2GJtuFBSK64paqm6s11gz2AnpCcf6H5a7L3NsH6QgoiaEYGicIVglVxyYl5WaY6ceicxTIgcojydvfgyAZw/132</a><br>与 <a href="https://thirdwx.qlogo.cn/mmopen/vi_32/F6Cr8ib2GJtuFBSK64paqm6s11gz2AnpCcf6H5a7L3NsH6QgoiaEYGicIVglVxyYl5WaY6ceicxTIgcojydvfgyAZw/132">https://thirdwx.qlogo.cn/mmopen/vi_32/F6Cr8ib2GJtuFBSK64paqm6s11gz2AnpCcf6H5a7L3NsH6QgoiaEYGicIVglVxyYl5WaY6ceicxTIgcojydvfgyAZw/132</a><br>是相同的只是域名不同<br>我们后台服务器域名添加的为<a href="https://wx.qlogo.cn/">https://wx.qlogo.cn</a> 那就可以进行替换</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">wx<span class="token punctuation">.</span><span class="token function">getImageInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment">// src: userInfo.headImgUrl, // 头像</span>    src<span class="token operator">:</span> userInfo<span class="token punctuation">.</span>headImgUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'https://thirdwx.qlogo.cn'</span><span class="token punctuation">,</span> <span class="token string">'https://wx.qlogo.cn'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token function">resolve</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解决思路，后台配置合法域名，通过 replace 方法将头像路径中的  <font color="red"><a href="https://thirdwx.qlogo.cn/">https://thirdwx.qlogo.cn</a></font> 替换成 <font color="red"><a href="https://wx.qlogo.cn/">https://wx.qlogo.cn</a></font> ，头像还是原来的头像，但是可以下载成本地图片再也不会报错了，canvas 可以画头像了<br>啦啦啦 嘟嘟嘟 ~~~</p>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序点击按钮分享</title>
      <link href="2021/01/06/xiao-cheng-xu-share/"/>
      <url>2021/01/06/xiao-cheng-xu-share/</url>
      
        <content type="html"><![CDATA[<h3 id="wxml"><a href="#wxml" class="headerlink" title="wxml"></a>wxml</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>share<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>分享给好友<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">onShareAppMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>from <span class="token operator">===</span> <span class="token string">'button'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>target<span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    title<span class="token operator">:</span> <span class="token string">"分享给好友"</span><span class="token punctuation">,</span>    path<span class="token operator">:</span> <span class="token string">'/pages/share/share'</span><span class="token punctuation">,</span>    imgurl<span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序button去掉默认样式</title>
      <link href="2021/01/06/xiao-cheng-xu-writefile/"/>
      <url>2021/01/06/xiao-cheng-xu-writefile/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/20210105163337499.png" alt="1"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 在本地用户文件目录下创建一个文件 hello.txt，写入内容 "hello, world"</span><span class="token keyword">const</span> fs <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">getFileSystemManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wx<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USER_DATA_PATH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/hello.txt</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token string">'hello, world'</span><span class="token punctuation">,</span> <span class="token string">'utf8'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 写入图片</span>fsm<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    filePath<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wx<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USER_DATA_PATH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/a.jpg</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>    data<span class="token operator">:</span> buffer<span class="token punctuation">,</span>    encoding<span class="token operator">:</span> <span class="token string">'binary'</span><span class="token punctuation">,</span>    <span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// resolve(filePath);</span>    wx<span class="token punctuation">.</span><span class="token function">getImageInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        src<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wx<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USER_DATA_PATH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/a.jpg</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>        <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/ability/file-system.html">小程序API文档介绍</a></p>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序button去掉默认样式</title>
      <link href="2021/01/06/xiao-cheng-xu-button/"/>
      <url>2021/01/06/xiao-cheng-xu-button/</url>
      
        <content type="html"><![CDATA[<p>/* 去除button默认样式 */</p><p>button::after {<br>border: none;</p><p>}</p><p>button {<br>background-color: transparent;</p><p>padding-left: 0;</p><p>padding-right: 0;</p><p>line-height:inherit;</p><p>}</p><p>button {<br>border-radius:0;</p><p>}</p>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodeJs爬取图片</title>
      <link href="2021/01/05/nodegetpic/"/>
      <url>2021/01/05/nodegetpic/</url>
      
        <content type="html"><![CDATA[<p>简单的nodeJs爬取图片 小样例</p><h3 id="1、新建node项目"><a href="#1、新建node项目" class="headerlink" title="1、新建node项目"></a>1、新建node项目</h3><p>npm init -y<br>-y 的含义：yes的意思，在init的时候省去了敲回车的步骤，生成的默认的package.json</p><h3 id="2、安装模块"><a href="#2、安装模块" class="headerlink" title="2、安装模块"></a>2、安装模块</h3><p>爬取图片所需要的模块</p><ul><li>request request模块让http请求变的更加简单。(作为客户端，去请求、抓取另一个网站的信息)</li><li>cheerio cheerio 是一个 jQuery Core 的子集，其实现了 jQuery Core 中浏览器无关的 DOM 操作 API<br>request cheerio 需要npm 下载</li><li>fs 自带 操作文件读写</li></ul><h3 id="3、编写抓取图片代码"><a href="#3、编写抓取图片代码" class="headerlink" title="3、编写抓取图片代码"></a>3、编写抓取图片代码</h3><h4 id="1、新建-app-js"><a href="#1、新建-app-js" class="headerlink" title="1、新建 app.js"></a>1、新建 app.js</h4><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">//引入模块const cheerio = require('cheerio');const fs = require('fs');const request = require('request');// 获取页面信息function start(url) {    request(url, function (err, res, body) {        if (!err &amp;&amp; res.statusCode == 200) {            findImg(body, saveImgFile);        }    })}// url 为页面的urlstart('url')// 页面节点解析function findImg(dom,callback) { let $ = cheerio.load(dom);//  页面节点 找到img 标签 each 循环 $('img').each((index,dom)=&gt;{ let imgSrc = $(dom).attr('src'); // 获取图片路径 callback(imgSrc,index); })}function saveImgFile(src, index) {    console.log(src,index)    let ext = src.split('.').pop() //图片类型 png jpg  pop() 方法用于删除并返回数组的最后一个元素。    let imgName = index + '.' + ext    // if (src.indexOf('http') &lt; 0) src = 'http:' + src    // src 路径需确保为完整路径    // 新建pic 文件夹 保存到文件夹下    request(src).pipe(fs.createWriteStream('./pic/' + imgName)) // 下载文件到本地}// 调用start  url 为页面的urlstart('http://www.netbian.com/index.htm')<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>目录 ：page.json ，app.js ，pic文件夹</p><h4 id="2、运行"><a href="#2、运行" class="headerlink" title="2、运行"></a>2、运行</h4><p>node app.js</p><p>注：<font color="#999" size="1px">最最简单的图片抓取方法，大部分页面都支持</font></p>]]></content>
      
      
      <categories>
          
          <category> nodeJs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> nodeJs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>心形对象</title>
      <link href="2021/01/05/qi-xi-xin-xing/"/>
      <url>2021/01/05/qi-xi-xin-xing/</url>
      
        <content type="html"><![CDATA[<p><img src="https://liemeday.github.io/blogPic/20210105101537/a.png" alt="效果图"><br><a href="https://liemeday.github.io/qixi/">查看效果</a><br><a href="https://github.com/lieMeDay/qixi">git地址</a><br>注：<font color="#999" size="1px">图片来源于网络，可自行替换对象图片反正我没有┭┮﹏┭┮</font></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js处理去掉富文本编辑的html，样式，只显示纯文字内容，以供列表页使用</title>
      <link href="2021/01/05/fwbh5/"/>
      <url>2021/01/05/fwbh5/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">&lt;script type="text/javascript"&gt;var description = '&lt;p style="margin-top:19.5pt;margin-right:0cm;margin-bottom:19.5pt;margin-left: 0cm;text-indent:24.1pt;mso-char-indent-count:2.0;mso-pagination:widow-orphan"&gt; &lt;b&gt;&lt;span lang="EN-US" style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;1.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;国际保险经纪行业收入分析&lt;span lang="EN-US"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt; &lt;p style="margin-top:19.5pt;margin-right:0cm;margin-bottom:19.5pt;margin-left: 0cm;text-indent:24.0pt;mso-char-indent-count:2.0;mso-pagination:widow-orphan"&gt; &lt;span lang="EN-US" style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;2010&lt;/span&gt;&lt;span style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;年全球保险经纪行业市场规模为&lt;span lang="EN-US"&gt;437.56&lt;/span&gt;亿美元，&lt;span lang="EN-US"&gt;2015&lt;/span&gt;年增长至&lt;span lang="EN-US"&gt;581.3&lt;/span&gt;亿美元。&lt;span lang="EN-US"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p align="center" style="margin-top:19.5pt;margin-right:0cm;margin-bottom:19.5pt; margin-left:0cm;text-align:center;mso-pagination:widow-orphan"&gt; &lt;span lang="EN-US" style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;2010-2015&lt;/span&gt;&lt;span style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;年国际保险经纪行业市场规模：亿美元&lt;/span&gt;&lt;/p&gt; &lt;p style="margin: 19.5pt 0cm; text-indent: 24.1pt; text-align: center;"&gt;&lt;span style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;国际保险经纪行业并购分析&lt;span lang="EN-US"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt; &lt;p style="margin-top:19.5pt;margin-right:0cm;margin-bottom:19.5pt;margin-left: 0cm;text-indent:24.0pt;mso-char-indent-count:2.0;mso-pagination:widow-orphan"&gt; &lt;span style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;保险经纪公司并购较为频繁，&lt;span lang="EN-US"&gt;2011&lt;/span&gt;年并购数量为&lt;span lang="EN-US"&gt;351&lt;/span&gt;件，且呈现增长趋势。一股保险行业的并购风潮正席卷全球各个市场。如意大利投资集团&lt;span lang="EN-US"&gt;Exor&lt;/span&gt;收购再保险公司&lt;span lang="EN-US"&gt;PartnerRe&lt;/span&gt;、韬睿惠悦与韦莱集团、韦莱与法国保险经纪公司&lt;span lang="EN-US"&gt;GrasSavoye&lt;/span&gt;、瑞士保险集团&lt;span lang="EN-US"&gt;ACE&lt;/span&gt;并购&lt;span lang="EN-US"&gt;Chubb&lt;/span&gt;以及美国保险公司&lt;span lang="EN-US"&gt;Anthem&lt;/span&gt;收购&lt;span lang="EN-US"&gt;Cigna&lt;/span&gt;。而这些不过是近年来保险业并购案清单的一小部分。&lt;span lang="EN-US"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-top:19.5pt;margin-right:0cm;margin-bottom:19.5pt;margin-left: 0cm;text-indent:24.0pt;mso-char-indent-count:2.0;mso-pagination:widow-orphan"&gt; &lt;span style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;然而，在热闹喧嚣的并购消息背后却是严酷的现实。波士顿咨询（&lt;span lang="EN-US"&gt;BCG&lt;/span&gt;）对&lt;span lang="EN-US"&gt;1990&lt;/span&gt;～&lt;span lang="EN-US"&gt;2014&lt;/span&gt;年间&lt;span lang="EN-US"&gt;778&lt;/span&gt;件涉及保险业的并购案进行了分析，对并购后一年内的股东总回报进行了追踪，最终发现只有&lt;span lang="EN-US"&gt;51%&lt;/span&gt;的并购能实际创造价值，而&lt;span lang="EN-US"&gt;49%&lt;/span&gt;的并购案则摧毁了公司的价值。近半数并购案失败可归咎为三大原因：并购准备和执行、并购后整合以及并购时机。&lt;span style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;未来&lt;span lang="EN-US"&gt;5&lt;/span&gt;年，多个宏观层面的因素将继续推动保险业进行整合。首先是监管继续收紧，尤其是对资本充足率的要求将继续提升，无论是独立保险商还是综合集团都将感到更大的资金压力。利率和投资回报将继续保持较低水平（至少在成熟市场），使传统的寿险业务盈利能力受到限制。&lt;span lang="EN-US"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-top:19.5pt;margin-right:0cm;margin-bottom:19.5pt;margin-left: 0cm;text-indent:24.0pt;mso-char-indent-count:2.0;mso-pagination:widow-orphan"&gt; &lt;span style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;此外，新兴竞争对手的威胁也不可小觑，甚至大型连锁超市和电信公司都有可能颠覆保险行业的价值链。这些企业不但拥有价值连城的消费者数据，而且拥有与客户之间的“最后一公里”连接。在新的运营模式下，传统保险企业难以掌控整条价值链，且容易成为新型商业模式的颠覆目标，例如一些网络聚合搜索产品能够为消费者提供价格透明的产品对比。&lt;span lang="EN-US"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-top:19.5pt;margin-right:0cm;margin-bottom:19.5pt;margin-left: 0cm;text-indent:24.0pt;mso-char-indent-count:2.0;mso-pagination:widow-orphan"&gt; &lt;span style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;资金充裕的大型保险公司可以利用投资抵御创新带来的威胁，而那些只聚焦于内部运营，对外部变化视而不见的中型企业将面临更激烈的竞争。对于保险公司来说，了解消费者的行为和需求是至关重要的能力，然而建设必需的大数据技术、文化和团队带来的成本巨大，让规模较小的保险公司难以承受。对于保险企业来说，有机成长的机会非常有限。成熟市场已经进入到整合周期内，尽管新兴市场存在着发展机遇，但市场环境非常复杂。要在新市场形成规模效应，并购显然仍是各大保险企业的明智之选。&lt;span lang="EN-US"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p align="center" style="margin-top:19.5pt;margin-right:0cm;margin-bottom:19.5pt; margin-left:0cm;text-align:center;mso-pagination:widow-orphan"&gt; &lt;span style="font-family:宋体;mso-bidi-font-family:宋体;color:#252525"&gt;世界排名前十保险经纪公司国际业务占比&lt;span lang="EN-US"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p align="center" style="margin-top:19.5pt;margin-right:0cm;margin-bottom:19.5pt; margin-left:0cm;text-align:center;mso-pagination:widow-orphan"&gt; &lt;img alt="" src="/baoxian/userfiles/1/images/back/news/2018/01/12.png" style="width: 554px; height: 289px;" /&gt;&lt;/p&gt;';description = description.replace(/(\n)/g, "");  description = description.replace(/(\t)/g, "");  description = description.replace(/(\r)/g, "");  description = description.replace(/&lt;\/?[^&gt;]*&gt;/g, "");  description = description.replace(/\s*/g, "");console.log(description)&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天气折线图</title>
      <link href="2021/01/04/tian-qi-zhe-xian-tu/"/>
      <url>2021/01/04/tian-qi-zhe-xian-tu/</url>
      
        <content type="html"><![CDATA[<h3 id="移动端天气折线图数据展示"><a href="#移动端天气折线图数据展示" class="headerlink" title="移动端天气折线图数据展示"></a>移动端天气折线图数据展示</h3><p><img src="https://liemeday.github.io/blogPic/20210104115612/1.png" alt="1"></p><p>可使用 <font color="blue">echarts</font> 来画折线图，小程序或h5都可<br>(以下展示小程序使用方法)</p><h4 id="小程序需先引入echarts"><a href="#小程序需先引入echarts" class="headerlink" title="小程序需先引入echarts"></a>小程序需先引入<font color="blue">echarts</font></h4><p>下载echarts小程序组件包<br><a href="https://echarts.apache.org/zh/tutorial.html#%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BD%BF%E7%94%A8%20ECharts">微信小程序中使用echarts</a></p><pre class="line-numbers language-JSON" data-language="JSON"><code class="language-JSON">"usingComponents": {    "ec-canvas":"/components/ec-canvas/ec-canvas"  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">import * as echarts from '../ec-canvas/echarts';var chart = ''function initChart(canvas, width, height, dpr) {  chart = echarts.init(canvas, null, {    width: width,    height: height,    devicePixelRatio: dpr //解决小程序视图模糊的问题，必写  });  canvas.setChart(chart);  var option = {    color: ["#FB7821", "#1B9DFF"],    grid: {      containLabel: true,      x: -11,      x2: 15,      top: 14,      bottom: 15    },    tooltip: {      show: true,      trigger: 'axis'    },    xAxis: {      type: 'category',      boundaryGap: false,      show: false,      axisLabel: {        interval: 49      }    },    yAxis: {      min: 'dataMin',      show: false    },    series: [{      itemStyle: {        normal: {          label: {            show: true,            position: [-5, -11],            textStyle: {              color: 'black'            },            formatter: function (params) {              return params.value + '°'            }          }        }      },      type: 'line',      symbolSize: '4',      smooth: true,      data: []    }, {      itemStyle: {        normal: {          label: {            show: true,            position: [-5, 7],            textStyle: {              color: 'black'            },            formatter: function (params) {              return params.value + '°'            }          }        }      },      type: 'line',      symbolSize: '4',      smooth: true,      data: []    }]  };  chart.setOption(option);  return chart;}//在data中调用data: {    ec: {      onInit: initChart    },  },<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获取到数据后 赋值给对应值即可<br>重点在与<font color="blue">html</font>与<font color="blue">css</font>的设置</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dlB<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scroll-view</span> <span class="token attr-name">scroll-x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>body-module<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>body-weather-line<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ec-canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mychart-day-line<span class="token punctuation">"</span></span> <span class="token attr-name">canvas-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myCanvasD<span class="token punctuation">"</span></span> <span class="token attr-name">ec</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{ ec }}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ec-canvas</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>block</span> <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{weatherData}}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>body-item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>day-font<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{{ item.dayWeek }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>day-time<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{{ item.dayLabel }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>weather-image<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{item.weatherIcon}}<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>weather-font<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{{ item.weatherLabel }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>weather-line<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>block</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scroll-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.dlB</span> <span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 400rpx<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 20rpx<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.body-module</span> <span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 410rpx<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.body-weather-line</span> <span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 608px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 26px<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 200rpx<span class="token punctuation">;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.body-item</span> <span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> 64px<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> 1px solid #f3f3f3<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* .body-bg {  background-image: linear-gradient(to top, #fff 0%, #def5e7 50%, #fff 100%);} */</span><span class="token selector">.day-font</span> <span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #3a3a3b<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 28rpx<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* .day-bgco {  background-color: #FFA800;  color: #fff;  width: 100rpx;  border-radius: 5rpx;  margin: 0 auto;} */</span><span class="token selector">.day-time</span> <span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #999999<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 24rpx<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.weather-image</span> <span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> -webkit-flex<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.weather-image .img</span> <span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.weather-font</span> <span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #3a3a3b<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 28rpx<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.weather-line</span> <span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同理可设置下方<br><img src="https://liemeday.github.io/blogPic/20210104115612/2.png" alt="2"></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序radio组件样式</title>
      <link href="2020/12/29/xiao-cheng-xu-radio/"/>
      <url>2020/12/29/xiao-cheng-xu-radio/</url>
      
        <content type="html"><![CDATA[<p>根据自己项目要求修改颜色按钮大小即可</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">radio .wx-radio-input</span> <span class="token punctuation">{</span>  <span class="token comment">/* 自定义样式.... */</span>  <span class="token property">height</span><span class="token punctuation">:</span> 24rpx<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 24rpx<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> -4rpx<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 2rpx solid #999<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">radio .wx-radio-input.wx-radio-input-checked::before</span> <span class="token punctuation">{</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span> <span class="token comment">/* 圆角 */</span>  <span class="token property">width</span><span class="token punctuation">:</span> 28rpx<span class="token punctuation">;</span> <span class="token comment">/* 选中后对勾大小，不要超过背景的尺寸 */</span>  <span class="token property">height</span><span class="token punctuation">:</span> 28rpx<span class="token punctuation">;</span> <span class="token comment">/* 选中后对勾大小，不要超过背景的尺寸 */</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 28rpx<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 30rpx<span class="token punctuation">;</span> <span class="token comment">/* 对勾大小 30rpx */</span>  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span> <span class="token comment">/* 对勾颜色 白色 */</span>  <span class="token property">background</span><span class="token punctuation">:</span> #0076fe<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 禁止遮罩滑动</title>
      <link href="2020/12/28/vue-zhe-zhao-hua-dong/"/>
      <url>2020/12/28/vue-zhe-zhao-hua-dong/</url>
      
        <content type="html"><![CDATA[<h4 id="遮罩层阻止默认滚动事件"><a href="#遮罩层阻止默认滚动事件" class="headerlink" title="遮罩层阻止默认滚动事件"></a>遮罩层阻止默认滚动事件</h4><p>vue中提供 @touchmove.prevent 方法可以完美解决这个问题。 </p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>child<span class="token punctuation">"</span></span> <span class="token attr-name">@touchmove.prevent</span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="vue同时还提供了其他的修饰符："><a href="#vue同时还提供了其他的修饰符：" class="headerlink" title="vue同时还提供了其他的修饰符："></a>vue同时还提供了其他的修饰符：</h4><h5 id="1、-stop：阻止冒泡（通俗讲就是阻止事件向上级DOM元素传递）"><a href="#1、-stop：阻止冒泡（通俗讲就是阻止事件向上级DOM元素传递）" class="headerlink" title="1、.stop：阻止冒泡（通俗讲就是阻止事件向上级DOM元素传递）"></a>1、.stop：阻止冒泡（通俗讲就是阻止事件向上级DOM元素传递）</h5><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doThis<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="2、-prevent：阻止默认事件的发生"><a href="#2、-prevent：阻止默认事件的发生" class="headerlink" title="2、.prevent：阻止默认事件的发生"></a>2、.prevent：阻止默认事件的发生</h5><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">v-on:</span>submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onSubmit<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span> ``##### . capture：捕获冒泡，即有冒泡发生时，有该修饰符的dom元素会先执行，如果有多个，从外到内依次执行，然后再按自然顺序执行触发的事件。```html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.capture</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doThis<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3、-self：将事件绑定到自身，只有自身才能触发，通常用于避免冒泡事件的影响"><a href="#3、-self：将事件绑定到自身，只有自身才能触发，通常用于避免冒泡事件的影响" class="headerlink" title="3、.self：将事件绑定到自身，只有自身才能触发，通常用于避免冒泡事件的影响"></a>3、.self：将事件绑定到自身，只有自身才能触发，通常用于避免冒泡事件的影响</h5><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.self</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doThat<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="4、-once：设置事件只能触发一次，比如按钮的点击等。"><a href="#4、-once：设置事件只能触发一次，比如按钮的点击等。" class="headerlink" title="4、.once：设置事件只能触发一次，比如按钮的点击等。"></a>4、.once：设置事件只能触发一次，比如按钮的点击等。</h5><h5 id="5、-passive：该修饰符大概意思用于对DOM的默认事件进行性能优化，根据官网的例子比如超出最大范围的滚动条滚动的。"><a href="#5、-passive：该修饰符大概意思用于对DOM的默认事件进行性能优化，根据官网的例子比如超出最大范围的滚动条滚动的。" class="headerlink" title="5、.passive：该修饰符大概意思用于对DOM的默认事件进行性能优化，根据官网的例子比如超出最大范围的滚动条滚动的。"></a>5、.passive：该修饰符大概意思用于对DOM的默认事件进行性能优化，根据官网的例子比如超出最大范围的滚动条滚动的。</h5><h5 id="6、-native：在父组件中给子组件绑定一个原生的事件，就将子组件变成了普通的HTML标签，不加’-native’事件是无法触-发的。"><a href="#6、-native：在父组件中给子组件绑定一个原生的事件，就将子组件变成了普通的HTML标签，不加’-native’事件是无法触-发的。" class="headerlink" title="6、.native：在父组件中给子组件绑定一个原生的事件，就将子组件变成了普通的HTML标签，不加’. native’事件是无法触 发的。"></a>6、.native：在父组件中给子组件绑定一个原生的事件，就将子组件变成了普通的HTML标签，不加’. native’事件是无法触 发的。</h5>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flex基础用法</title>
      <link href="2020/12/28/flex-ji-chu/"/>
      <url>2020/12/28/flex-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="flex布局属性"><a href="#flex布局属性" class="headerlink" title="flex布局属性"></a>flex布局属性</h2><p>wps  文档  <a href="https://kdocs.cn/l/ceEQBvIDZHxO">https://kdocs.cn/l/ceEQBvIDZHxO</a><br>FlexiableBox即是弹性盒，用来进行弹性布局，一般跟rem（rem伸缩布局（转））连起来用比较方便，flexbox负责处理页面布局，然后rem处理一些flex顾及不到的地方（rem伸缩布局主要处理尺寸的适配问题），布局还是要传统布局的。<br><img src="https://liemeday.github.io/blogPic/20201228151010/1.webp"><br>布局的传统解决方案，基于<font color="blue">盒状模型</font>，依赖<font color="blue">display</font>属性+<font color="blue">position</font> 属性 +<font color="blue">float</font>属性。它对于那些特殊布局非常不方便，比如，<font color="blue">垂直居中</font>就不容易实现。<br><img src="https://liemeday.github.io/blogPic/20201228151010/2.webp"><br>2009年，W3C提出了一种新的方案—-Flex布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。<br><img src="https://liemeday.github.io/blogPic/20201228151010/3.webp"></p><p>Flex布局将成为未来布局的首选方案。</p><h3 id="一、Flex布局是什么？"><a href="#一、Flex布局是什么？" class="headerlink" title="一、Flex布局是什么？"></a>一、Flex布局是什么？</h3><p>Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p><p>任何一个容器都可以指定为Flex布局。</p><p>.box{display:flex;}</p><p>行内元素也可以使用Flex布局。</p><p>.box{display:inline-flex;}</p><p>Webkit内核的浏览器，必须加上-webkit前缀。</p><p>.box{display:-webkit-flex;/* Safari */display:flex;}</p><p>注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。</p><h3 id="二、基本概念"><a href="#二、基本概念" class="headerlink" title="二、基本概念"></a>二、基本概念</h3><p>采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。<br><img src="https://liemeday.github.io/blogPic/20201228151010/4.webp"><br>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。</p><p>项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。</p><h3 id="三、容器的属性"><a href="#三、容器的属性" class="headerlink" title="三、容器的属性"></a>三、容器的属性</h3><p>以下6个属性设置在容器上。<br>flex-direction<br>flex-wrap<br>flex-flow<br>justify-content<br>align-items<br>align-content</p><h4 id="3-1-flex-direction属性"><a href="#3-1-flex-direction属性" class="headerlink" title="3.1 flex-direction属性"></a>3.1 flex-direction属性</h4><p>flex-direction属性决定主轴的方向（即项目的排列方向）。<br>.box{flex-direction:row|row-reverse|column|column-reverse;}<br><img src="https://liemeday.github.io/blogPic/20201228151010/5.webp"><br>它可能有4个值。</p><p>row（默认值）：主轴为水平方向，起点在左端。<br>row-reverse：主轴为水平方向，起点在右端。<br>column：主轴为垂直方向，起点在上沿。<br>column-reverse：主轴为垂直方向，起点在下沿。</p><h4 id="3-2-flex-wrap属性"><a href="#3-2-flex-wrap属性" class="headerlink" title="3.2 flex-wrap属性"></a>3.2 flex-wrap属性</h4><p>默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。<br><img src="https://liemeday.github.io/blogPic/20201228151010/6.webp"><br>.box{flex-wrap:nowrap|wrap|wrap-reverse;}<br>它可能取三个值。</p><p>（1）nowrap（默认）：不换行。<br><img src="https://liemeday.github.io/blogPic/20201228151010/7.webp"><br>（2）wrap：换行，第一行在上方。<br><img src="https://liemeday.github.io/blogPic/20201228151010/8.webp"></p><p>（3）wrap-reverse：换行，第一行在下方。<br><img src="https://liemeday.github.io/blogPic/20201228151010/9.webp"></p><h4 id="3-3-flex-flow"><a href="#3-3-flex-flow" class="headerlink" title="3.3 flex-flow"></a>3.3 flex-flow</h4><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p><p>.box{flex-flow:||;}</p><h4 id="3-4-justify-content属性"><a href="#3-4-justify-content属性" class="headerlink" title="3.4 justify-content属性"></a>3.4 justify-content属性</h4><p>justify-content属性定义了项目在主轴上的对齐方式。</p><p>.box{justify-content:flex-start|flex-end|center|space-between|space-around;}<br><img src="https://liemeday.github.io/blogPic/20201228151010/10.webp"><br>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p><p>flex-start（默认值）：左对齐</p><p>flex-end：右对齐</p><p>center： 居中</p><p>space-between：两端对齐，项目之间的间隔都相等。</p><p>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</p><h4 id="3-5-align-items属性"><a href="#3-5-align-items属性" class="headerlink" title="3.5 align-items属性"></a>3.5 align-items属性</h4><p>align-items属性定义项目在交叉轴上如何对齐。</p><p>.box{align-items:flex-start|flex-end|center|baseline|stretch;}<br><img src="https://liemeday.github.io/blogPic/20201228151010/11.webp"><br>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p><p>flex-start：交叉轴的起点对齐。<br>flex-end：交叉轴的终点对齐。<br>center：交叉轴的中点对齐。<br>baseline: 项目的第一行文字的基线对齐。<br>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</p><h4 id="3-6-align-content属性"><a href="#3-6-align-content属性" class="headerlink" title="3.6 align-content属性"></a>3.6 align-content属性</h4><p>align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。<br>.box{align-content:flex-start|flex-end|center|space-between|space-around|stretch;}<br><img src="https://liemeday.github.io/blogPic/20201228151010/12.webp"><br>该属性可能取6个值。</p><p>flex-start：与交叉轴的起点对齐。<br>flex-end：与交叉轴的终点对齐。<br>center：与交叉轴的中点对齐。<br>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。<br>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。<br>stretch（默认值）：轴线占满整个交叉轴。</p><h3 id="四、项目的属性"><a href="#四、项目的属性" class="headerlink" title="四、项目的属性"></a>四、项目的属性</h3><p>以下6个属性设置在项目上。</p><p>order<br>flex-grow<br>flex-shrink<br>flex-basis<br>flex<br>align-self</p><h4 id="4-1-order属性"><a href="#4-1-order属性" class="headerlink" title="4.1 order属性"></a>4.1 order属性</h4><p>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p><p>.item{order:;}<br><img src="https://liemeday.github.io/blogPic/20201228151010/13.webp"></p><h4 id="4-2-flex-grow属性"><a href="#4-2-flex-grow属性" class="headerlink" title="4.2 flex-grow属性"></a>4.2 flex-grow属性</h4><p>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p><p>.item{flex-grow:;/* default 0 */}<br><img src="https://liemeday.github.io/blogPic/20201228151010/14.webp"><br>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><h4 id="4-3-flex-shrink属性"><a href="#4-3-flex-shrink属性" class="headerlink" title="4.3 flex-shrink属性"></a>4.3 flex-shrink属性</h4><p>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><p>.item{flex-shrink:;/* default 1 */}<br><img src="https://liemeday.github.io/blogPic/20201228151010/15.webp"><br>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。</p><p>负值对该属性无效。</p><h4 id="4-4-flex-basis属性"><a href="#4-4-flex-basis属性" class="headerlink" title="4.4 flex-basis属性"></a>4.4 flex-basis属性</h4><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</p><p>.item{flex-basis:|auto;/* default auto */}</p><p>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。</p><h4 id="4-5-flex属性"><a href="#4-5-flex属性" class="headerlink" title="4.5 flex属性"></a>4.5 flex属性</h4><p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</p><p>.item{flex:none|[&lt;’flex-grow’&gt;&lt;’flex-shrink’&gt;?||&lt;’flex-basis’&gt;]}</p><p>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。</p><p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><h4 id="4-6-align-self属性"><a href="#4-6-align-self属性" class="headerlink" title="4.6 align-self属性"></a>4.6 align-self属性</h4><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p><p>.item{align-self:auto|flex-start|flex-end|center|baseline|stretch;}<br><img src="https://liemeday.github.io/blogPic/20201228151010/16.webp"><br>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="1-flex设置元素垂直居中对齐"><a href="#1-flex设置元素垂直居中对齐" class="headerlink" title="1. flex设置元素垂直居中对齐"></a>1. flex设置元素垂直居中对齐</h3><p>HTML代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inner<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是一个测试这是一个测试这是一个测试这是一个测试这是一个测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CSS代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.demo</span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid purple<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token comment">/*设置为flex布局*/</span> <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/*水平居中*/</span> <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token comment">/*垂直居中*/</span><span class="token punctuation">}</span><span class="token selector">.inner</span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 160px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 160px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 26px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如图：<br><img src="https://liemeday.github.io/blogPic/20201228151010/17.webp"></p><h3 id="2-用flex布局制作导航栏"><a href="#2-用flex布局制作导航栏" class="headerlink" title="2. 用flex布局制作导航栏"></a>2. 用flex布局制作导航栏</h3><p> 以前在写导航栏的时候，总是用float或者display：inline-block实现，但是这两种方法都会有各种问题，比如浮动会影响父元素以及兄弟元素的样式，需要清除浮动</p><p> 现在用flex会很方便，并且是弹性布局</p><p> HTML代码：<br> </p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>音乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>影视<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>旅游<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>CSS代码：<p></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">ul</span><span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token selector">li</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如图所示：<br><img src="https://liemeday.github.io/blogPic/20201228151010/18.webp"><br>我们只要在HTML代码里面多加两个li元素，导航便弹性变化<br><img src="https://liemeday.github.io/blogPic/20201228151010/19.webp"><br>不需要改变css代码，即可在导航栏中增加项目</p><h3 id="3-有时候需要做成左图右文字的样式，如下图所示："><a href="#3-有时候需要做成左图右文字的样式，如下图所示：" class="headerlink" title="3. 有时候需要做成左图右文字的样式，如下图所示："></a>3. 有时候需要做成左图右文字的样式，如下图所示：</h3><p><img src="https://liemeday.github.io/blogPic/20201228151010/20.webp"><br>此时用flex会很方便</p><p>HTML代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Iphone7 PLUS XXXXXXXXXX<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>总人数99<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>剩余人数33<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>立即参与<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CSS代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.demo</span><span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token comment">/*设置为flex布局*/</span> <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.demo &gt; div</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.left</span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> #d4cdcd<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.right</span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 380px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>甚至有多列布局，<br><img src="https://liemeday.github.io/blogPic/20201228151010/21.webp"><br>HTML代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>description<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>description<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>description<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>description<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>确认<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>取消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CSS代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.demo</span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #b7b2b7<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span> 30px auto<span class="token punctuation">;</span> <span class="token property">padding-top</span><span class="token punctuation">:</span> 17px<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token comment">/*设置为flex布局*/</span> <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.demo &gt; div</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-固定百分比布局："><a href="#4-固定百分比布局：" class="headerlink" title="4. 固定百分比布局："></a>4. 固定百分比布局：</h3><p>HTML代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item item1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item item2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item item3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item item4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> (1) 等分布局：<br><img src="https://liemeday.github.io/blogPic/20201228151010/22.webp"><br>CSS代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.demo</span><span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token selector">.item</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）某一个固定<br><img src="https://liemeday.github.io/blogPic/20201228151010/23.webp"></p><p>CSS代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.demo</span><span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token selector">.item</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.item2</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 0 0 50%<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）某两个固定<br><img src="https://liemeday.github.io/blogPic/20201228151010/23.webp"></p><p>CSS代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.demo</span><span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token selector">.item</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.item2</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 0 0 50%<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.item4</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 0 0 20%<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）三个固定<br><img src="https://liemeday.github.io/blogPic/20201228151010/23.webp"><br>CSS代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.demo</span><span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token selector">.item</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.item1</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 0 0 10%<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.item2</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 0 0 50%<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.item4</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 0 0 20%<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-圣杯布局，如图所示"><a href="#5-圣杯布局，如图所示" class="headerlink" title="5. 圣杯布局，如图所示"></a>5. 圣杯布局，如图所示</h3><p><img src="https://liemeday.github.io/blogPic/20201228151010/24.webp"><br>HTML代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>头部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>body<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>center<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>底部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CSS代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.demo</span><span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token selector">.demo div</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.body</span><span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token selector">.header,.footer,.left,.right</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 0 0 20%<span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-输入框布局，有时需要在输入框的前部添加提示，或者后部添加按钮，如图所示："><a href="#6-输入框布局，有时需要在输入框的前部添加提示，或者后部添加按钮，如图所示：" class="headerlink" title="6. 输入框布局，有时需要在输入框的前部添加提示，或者后部添加按钮，如图所示："></a>6. 输入框布局，有时需要在输入框的前部添加提示，或者后部添加按钮，如图所示：</h3><p><img src="https://liemeday.github.io/blogPic/20201228151010/25.webp"><br>HTML代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tip<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>search<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CSS代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.demo</span><span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">input</span><span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-底部footer固定在底部，但是不是fixed定位"><a href="#7-底部footer固定在底部，但是不是fixed定位" class="headerlink" title="7. 底部footer固定在底部，但是不是fixed定位"></a>7. 底部footer固定在底部，但是不是fixed定位</h3><p>页面会经常用到固定的底栏，但是当页面内容过少时，footer会到页面中间，下面用flex来解决<br><img src="https://liemeday.github.io/blogPic/20201228151010/26.webp"><br>HTML代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>这是主要内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>这是底部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>CSS代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.demo</span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.main</span><span class="token punctuation">{</span>  <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.footer</span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-流式布局-，如下如所示："><a href="#8-流式布局-，如下如所示：" class="headerlink" title="8. 流式布局 ，如下如所示："></a>8. 流式布局 ，如下如所示：</h3><p><img src="https://liemeday.github.io/blogPic/20201228151010/27.webp"><br>HTML代码如下：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CSS代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.demo</span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> 258px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>  <span class="token property">align-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.item</span><span class="token punctuation">{</span>  <span class="token property">flex</span><span class="token punctuation">:</span> 0 0 33.333333%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scss基础用法</title>
      <link href="2020/12/28/scss-ji-ben/"/>
      <url>2020/12/28/scss-ji-ben/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-javaScript" data-language="javaScript"><code class="language-javaScript">​npm install node-sass --save-dev        //安装node-sass npm install sass-loader@7.3.1 --save-dev      //安装sass-loader npm install style-loader --save-dev         //安装style-loader<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="简单用法"><a href="#简单用法" class="headerlink" title="简单用法"></a>简单用法</h3><h4 id="​-amp-都代指父类"><a href="#​-amp-都代指父类" class="headerlink" title="​&amp; 都代指父类"></a>​&amp; 都代指父类</h4><p><img src="https://liemeday.github.io/blogPic/20201228150110/1.jpg"><br>变量是以 $ 开头的，可以是颜色，长度，数值，等等。</p><p>像 js 的变量一样，scss 的变量也是有作用域的，也就是说内部声明的变量是无法在外面使用的，如果想让内部的变量在外部可访问，需要在变量值后面添加 !global 声明。<br><img src="https://liemeday.github.io/blogPic/20201228150110/2.jpg"><br>将变量直接嵌入字符串，需要用 #{ 变量 } （类似 ES6 中模板字符串中的 ${ 变量 }）<br><img src="https://liemeday.github.io/blogPic/20201228150110/3.jpg"><br>如果 url() 传入的参数是有效的带引号的url，sass不会处理它，但还可以往其中插入变量，如果不是有效的带引号的 url，带有方法或变量的，sass就把它当成正常的方式识别<br><img src="https://liemeday.github.io/blogPic/20201228150110/4.jpg"></p><h4 id="mixin-定义一个类或方法，在其它地方通过-include-引用这个方法或类。"><a href="#mixin-定义一个类或方法，在其它地方通过-include-引用这个方法或类。" class="headerlink" title="@mixin 定义一个类或方法，在其它地方通过 @include 引用这个方法或类。"></a>@mixin 定义一个类或方法，在其它地方通过 @include 引用这个方法或类。</h4><p><img src="https://liemeday.github.io/blogPic/20201228150110/5.jpg"></p><h4 id="extend-继承"><a href="#extend-继承" class="headerlink" title="@extend 继承"></a>@extend 继承</h4><p>​不能继承 @extend .danger.text 这种连续组合的类，应该写为 @extend .danger, .text<br><img src="https://liemeday.github.io/blogPic/20201228150110/6.jpg"></p><h4 id="颜色-透明饱和度"><a href="#颜色-透明饱和度" class="headerlink" title="颜色 透明饱和度"></a>颜色 透明饱和度</h4><p><img src="https://liemeday.github.io/blogPic/20201228150110/7.jpg"><br><img src="https://liemeday.github.io/blogPic/20201228150110/8.jpg"></p><h4 id="方法以-function-开头，以-return-结尾，也就是说，方法的定义，必须要有返回值"><a href="#方法以-function-开头，以-return-结尾，也就是说，方法的定义，必须要有返回值" class="headerlink" title="方法以 @function 开头，以 @return 结尾，也就是说，方法的定义，必须要有返回值"></a>方法以 @function 开头，以 @return 结尾，也就是说，方法的定义，必须要有返回值</h4><p><img src="https://liemeday.github.io/blogPic/20201228150110/9.jpg"><br><img src="https://liemeday.github.io/blogPic/20201228150110/10.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
            <tag> vue </tag>
            
            <tag> scss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>九宫格</title>
      <link href="2020/12/28/jiu-gong-ge/"/>
      <url>2020/12/28/jiu-gong-ge/</url>
      
        <content type="html"><![CDATA[<p>参考<a href="https://cloud.tencent.com/developer/article/1186773">https://cloud.tencent.com/developer/article/1186773</a></p><h2 id="1、布局"><a href="#1、布局" class="headerlink" title="1、布局"></a>1、布局</h2><p><img src="https://liemeday.github.io/blogPic/20201228142817/gridC1.png" alt="Markdown"><br>左右固定，中间自适应；左固定，右自适应；右固定，左自适应 —–见布局</p><pre class="line-numbers language-Javascript" data-language="Javascript"><code class="language-Javascript">const app = Vue.createApp({})app.config.globalProperties.$md5 = () =&gt; {}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2、九宫格"><a href="#2、九宫格" class="headerlink" title="2、九宫格"></a>2、九宫格</h2><p><img src="https://liemeday.github.io/blogPic/20201228142817/gridC2.png" alt="Markdown"><br>CSS:</p><pre class="line-numbers language-CSS" data-language="CSS"><code class="language-CSS">.container{     display: grid;     grid-template-columns:repeat(3,1fr);     grid-template-rows: repeat(3,1fr);     height: 800px;     width: 800px;     grid-gap: 10px;     margin: auto; }.container div{    text-align: center;    background: pink;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>HTML:</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;div class="container"&gt;    &lt;div class="item"&gt;1&lt;/div&gt;    &lt;div class="item"&gt;2&lt;/div&gt;    &lt;div class="item"&gt;3&lt;/div&gt;    &lt;div class="item"&gt;4&lt;/div&gt;    &lt;div class="item"&gt;5&lt;/div&gt;    &lt;div class="item"&gt;6&lt;/div&gt;    &lt;div class="item"&gt;7&lt;/div&gt;    &lt;div class="item"&gt;8&lt;/div&gt;    &lt;div class="item"&gt;9&lt;/div&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、圣杯布局和双飞翼布局"><a href="#3、圣杯布局和双飞翼布局" class="headerlink" title="3、圣杯布局和双飞翼布局"></a>3、圣杯布局和双飞翼布局</h2><p><img src="https://liemeday.github.io/blogPic/20201228142817/gridC3.png" alt="Markdown"><br>html:</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;div class="container"&gt;    &lt;div class="header"&gt;header&lt;/div&gt;    &lt;div class="left"&gt;left&lt;/div&gt;    &lt;div class="body"&gt;body&lt;/div&gt;    &lt;div class="right"&gt;right&lt;/div&gt;    &lt;div class="footer"&gt;footer&lt;/div&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="css-第一种："><a href="#css-第一种：" class="headerlink" title="css:第一种："></a>css:第一种：</h3><pre class="line-numbers language-CSS" data-language="CSS"><code class="language-CSS">.container{    display: grid;    grid-template-columns: 200px 1fr 200px;/*三列，左右固定，中间自适应*/    grid-template-rows: 100px 1fr 100px;/*三行，固定头部和底部的高度，中间自适应*/    height: 800px;    grid-template-areas:     'header header header'    'left body right'    'footer footer footer'}.header{    grid-area: header;    background: pink;}.left{    grid-area: left;    background: yellow;}.body{    grid-area: body;    background: yellowgreen;}.right{    grid-area: right;    background: lawngreen;}.footer{    grid-area: footer;    background: lightblue;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="css第二种："><a href="#css第二种：" class="headerlink" title="css第二种："></a>css第二种：</h3><pre class="line-numbers language-CSS" data-language="CSS"><code class="language-CSS">.container{    display: grid;    grid-template-columns: 200px 1fr 200px;/*三列，左右固定，中间自适应*/    grid-template-rows: 100px 1fr 100px;/*三行，固定头部和底部的高度，中间自适应*/    height: 800px;}.header{    grid-area: 1/1/1/4;    background: pink;}.left{    background: yellow;}.body{    background: yellowgreen;}.right{    background: lawngreen;}.footer{    grid-area: 3 /1/3/ 4;    background: lightblue;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序获取分享灵感</title>
      <link href="2020/12/28/xiao-cheng-xu-fen-xiang-ling-gan/"/>
      <url>2020/12/28/xiao-cheng-xu-fen-xiang-ling-gan/</url>
      
        <content type="html"><![CDATA[<p>判断是否有分享进入小程序</p><p>在app.js中onLaunch:function(option){}里</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">options<span class="token punctuation">.</span>scene<span class="token operator">==</span><span class="token number">1007</span><span class="token operator">||</span>options<span class="token punctuation">.</span>scene<span class="token operator">==</span><span class="token number">1008</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://liemeday.github.io/blogPic/20201228142817/1.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间判断</title>
      <link href="2020/12/18/datepd/"/>
      <url>2020/12/18/datepd/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 判断当前时间是否在某一时间段内 a=&gt;未开始 b=&gt;已结束 c=&gt;正在进行</span><span class="token keyword">const</span> <span class="token function-variable function">compareDate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d1<span class="token punctuation">,</span> d2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token comment">//如果时间格式是正确的，那下面这一步转化时间格式就可以不用了</span>  <span class="token keyword">var</span> dateBegin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>d1<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将-转化为/，使用new Date</span>  <span class="token keyword">var</span> dateEnd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>d2<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将-转化为/，使用new Date</span>  <span class="token comment">// var dateBegin = new Date(d1); //将-转化为/，使用new Date</span>  <span class="token comment">// var dateEnd = new Date(d2); //将-转化为/，使用new Date</span>  <span class="token keyword">var</span> dateNow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取当前时间</span>  <span class="token keyword">var</span> beginDiff <span class="token operator">=</span> dateNow<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> dateBegin<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//时间差的毫秒数       </span>  <span class="token comment">// var beginDayDiff = Math.floor(beginDiff / (24 * 3600 * 1000)); //计算出相差天数</span>  <span class="token keyword">var</span> endDiff <span class="token operator">=</span> dateNow<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> dateEnd<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//时间差的毫秒数</span>  <span class="token comment">// var endDayDiff = Math.floor(endDiff / (24 * 3600 * 1000)); //计算出相差天数    </span>  <span class="token comment">// a==&gt;未开始  b==&gt;已结束 c==&gt;在时间段内</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>beginDiff <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">'a'</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>endDiff <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">'b'</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>beginDiff <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> endDiff <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">'c'</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">'d'</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间格式转换</title>
      <link href="2020/12/16/dateturn/"/>
      <url>2020/12/16/dateturn/</url>
      
        <content type="html"><![CDATA[<h3 id="将秒转换成时分秒"><a href="#将秒转换成时分秒" class="headerlink" title="将秒转换成时分秒"></a>将秒转换成时分秒</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//将秒转换成时分秒</span><span class="token keyword">const</span> <span class="token function-variable function">formatSeconds</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> hh <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>a <span class="token operator">/</span> <span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>hh <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> hh <span class="token operator">=</span> <span class="token string">"0"</span> <span class="token operator">+</span> hh<span class="token punctuation">;</span>  <span class="token keyword">var</span> mm <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">-</span> hh <span class="token operator">*</span> <span class="token number">3600</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>mm <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> mm <span class="token operator">=</span> <span class="token string">"0"</span> <span class="token operator">+</span> mm<span class="token punctuation">;</span>  <span class="token keyword">var</span> ss <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">-</span> hh <span class="token operator">*</span> <span class="token number">3600</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>ss <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> ss <span class="token operator">=</span> <span class="token string">"0"</span> <span class="token operator">+</span> ss<span class="token punctuation">;</span>  <span class="token keyword">var</span> length <span class="token operator">=</span> hh <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> mm <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> ss<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> length<span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">"NaN"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="计算两个日期时间差-当前日期"><a href="#计算两个日期时间差-当前日期" class="headerlink" title="计算两个日期时间差 当前日期"></a>计算两个日期时间差 当前日期</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 计算两个日期时间差 当前日期</span><span class="token keyword">const</span> <span class="token function-variable function">twoDateCom</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> d1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将-转化为/，使用new Date</span>  <span class="token keyword">var</span> d2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> cha <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span>d2 <span class="token operator">-</span> d1<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> d3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将-转化为/，使用new Date</span>    cha <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span>d3 <span class="token operator">-</span> d1<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> cha<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="将时分秒的格式转换成秒的函数"><a href="#将时分秒的格式转换成秒的函数" class="headerlink" title="将时分秒的格式转换成秒的函数"></a>将时分秒的格式转换成秒的函数</h3><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">//将时分秒的格式转换成秒的函数const hms = (time) =&gt; {  var s = "";  if (time != "" || time != null) {    // console.log(time);    var hour = time.split(":")[0];    var min = time.split(":")[1];    var sec = time.split(":")[2];    s = Number(hour * 3600) + Number(min * 60) + Number(sec);    return s;  } else {    return "";  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="时间戳取时分秒"><a href="#时间戳取时分秒" class="headerlink" title="时间戳取时分秒"></a>时间戳取时分秒</h3><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">// 时间戳取时分秒const getCsfm = (data) =&gt; {  var myDate = new Date(Number(data));// var year = myDate.getFullYear(); //获取当前年// var mon = myDate.getMonth() + 1; //获取当前月// var date = myDate.getDate(); //获取当前日        var hours = myDate.getHours(); //获取当前小时        hours=hours&lt;10?'0'+hours:hoursvar minutes = myDate.getMinutes(); //获取当前分钟        minutes=minutes&lt;10?'0'+minutes:minutesvar seconds = myDate.getSeconds(); //获取当前秒        seconds=seconds&lt;10?'0'+seconds:secondsvar now = hours + ":" + minutes + ":" + seconds;return now;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获取两个日期之间相隔的所有日期"><a href="#获取两个日期之间相隔的所有日期" class="headerlink" title="获取两个日期之间相隔的所有日期"></a>获取两个日期之间相隔的所有日期</h3><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">// 获取两个日期之间相隔的所有日期function getDayAll(starDay, endDay) {  var arr = [];  var dates = [];  // 设置两个日期UTC时间  var db = new Date(starDay.replace(/-/g, "/"));  var de = new Date(endDay.replace(/-/g, "/"));  // 获取两个日期GTM时间  var s = db.getTime() - 24 * 60 * 60 * 1000;  var d = de.getTime() - 24 * 60 * 60 * 1000;  // 获取到两个日期之间的每一天的毫秒数  for (var i = s; i &lt;= d;) {    i = i + 24 * 60 * 60 * 1000;    arr.push(parseInt(i))  }  // 获取每一天的时间  YY-MM-DD  for (var j in arr) {    var time = new Date(arr[j]);    var year = time.getFullYear(time);    var mouth = (time.getMonth() + 1) &gt;= 10 ? (time.getMonth() + 1) : ('0' + (time.getMonth() + 1));    var day = time.getDate() &gt;= 10 ? time.getDate() : ('0' + time.getDate());    var YYMMDD = year + '-' + mouth + '-' + day;    dates.push(YYMMDD)  }  return dates}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js循环方法 -- for</title>
      <link href="2020/11/28/for/"/>
      <url>2020/11/28/for/</url>
      
        <content type="html"><![CDATA[<h3 id="1-for循环"><a href="#1-for循环" class="headerlink" title="1.for循环"></a>1.for循环</h3><p>最基本的循环方式，不多说。前端js中，这种最基本的循环才是速度最快的，效率最高的</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-for-in循环"><a href="#2-for-in循环" class="headerlink" title="2.for in循环"></a>2.for in循环</h3><p>for in循环是用来遍历对象的。要知道JavaScript对象的所有属性都是字符串，不过属性对应的值可以是任意数据类型。（注意：遍历时不仅能读取对象自身上面的成员属性，也能遍历出对象的原型属性）</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>a<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> prop <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//prop指对象的属性名</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 输出:</span><span class="token comment">// a,1</span><span class="token comment">// b,2</span><span class="token comment">// c,3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>for in同样可以用来循环数组,但是不推荐这么做。由于Array也是对象，而它的每个元素的索引被视为对象的属性，因此，for in循环可以直接循环出Array的索引，但得到的是String而不是Number，所以一旦你想用这个index去进行计算，就会出错。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> index <span class="token keyword">in</span> myArray<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 不推荐这样</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myArray<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-forEach循环"><a href="#3-forEach循环" class="headerlink" title="3. forEach循环"></a>3. forEach循环</h3><p>没什么好说的，看例子。(注意：forEach循环里面没办法用break跳出循环。而且在IE中无法实现，需要做兼容处理。)</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'123'</span><span class="token punctuation">,</span><span class="token string">'qwewq'</span><span class="token punctuation">,</span><span class="token string">'sfds'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>myArray<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出</span><span class="token comment">//"123",1</span><span class="token comment">//"qwewq",2</span><span class="token comment">//"sfds",3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-for-of循环"><a href="#4-for-of循环" class="headerlink" title="4.for of循环"></a>4.for of循环</h3><p>作为ES6新增的循环方法，个人觉得相当好用，而且方便。这个方法避开了for-in循环的所有缺陷。而且，它可以正确响应break、continue和return语句。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//循环数组</span><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'123'</span><span class="token punctuation">,</span><span class="token string">'qwewq'</span><span class="token punctuation">,</span><span class="token string">'sfds'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//item指的的就是数组每一项的值。不是索引。</span><span class="token punctuation">}</span><span class="token comment">//输出</span><span class="token comment">//'123'</span><span class="token comment">//'qwewq'</span><span class="token comment">//'sfds'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>for-of循环不仅支持数组，还支持大多数类数组对象，例如DOM NodeList对象。但是for of也有一个致命伤，就像例子看到的，没有索引。对，这是优点也是缺点。遍历数组对象，直接就是item.属性(或者item[属性]),而不用像for循环那样arr[index].属性(arrindex)。但是你有的时候真的就得用到index。不好意思，只能把数组转成Map()。但我觉得真的需要用到index，还是换成forEach吧</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//遍历字符串</span><span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">'Asher'</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> char <span class="token keyword">of</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//A s h e r</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-map"><a href="#5-map" class="headerlink" title="5.map"></a>5.map</h3><p>map() 方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> tt <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//  console.log(i)</span> <span class="token keyword">return</span> i<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// [2,4,6]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-filter"><a href="#6-filter" class="headerlink" title="6.filter"></a>6.filter</h3><p>filter 方法是 Array 对象内置方法，它会返回通过过滤的元素，不改变原来的数组。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> tt <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span> i<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// [2,3]</span><span class="token comment">// 或</span>tt<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token parameter">filter（（v）</span><span class="token operator">=&gt;</span>v<span class="token operator">&gt;</span><span class="token number">1</span>）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-some"><a href="#7-some" class="headerlink" title="7.some"></a>7.some</h3><p>some() 方法用于检测数组中的元素是否满足指定条件（函数提供）,返回 boolean 值，不改变原数组。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> tt <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span> i<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-every"><a href="#8-every" class="headerlink" title="8.every"></a>8.every</h3><p>every() 方法用于检测数组所有元素是否都符合指定条件（通过函数提供），返回 boolean 值，不改变原数组。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> tt <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span> i<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 检测数组中元素是否都大于1</span><span class="token comment">// false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-reduce"><a href="#9-reduce" class="headerlink" title="9.reduce"></a>9.reduce</h3><p>reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> ad <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span>j</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span> i<span class="token operator">+</span>j<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>// 6<br>可以使用reduce去重</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">[</span>     <span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"小明"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"小张"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"小李"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"小孙"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"小周"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"小陈"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>person <span class="token operator">=</span> person<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cur<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    obj<span class="token punctuation">[</span>next<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> obj<span class="token punctuation">[</span>next<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> cur<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> cur<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-其他"><a href="#10-其他" class="headerlink" title="10.其他"></a>10.其他</h3><p>还有while，do . . . while ，switch等</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> es6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js数组对象排序</title>
      <link href="2020/11/28/arrsort/"/>
      <url>2020/11/28/arrsort/</url>
      
        <content type="html"><![CDATA[<h3 id="普通排序"><a href="#普通排序" class="headerlink" title="普通排序"></a>普通排序</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//["A", "B", "a", "b"]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="数组对象"><a href="#数组对象" class="headerlink" title="数组对象"></a>数组对象</h3><p>利用数组api ——&gt; sort来进行排序</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">"Rom"</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">"Bob"</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">22</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">"Ma"</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">"Tony"</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">25</span><span class="token punctuation">}</span><span class="token punctuation">]</span> person<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token keyword">return</span> a<span class="token punctuation">.</span>age<span class="token operator">-</span>b<span class="token punctuation">.</span>age<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//升序</span> person<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>age<span class="token operator">-</span>a<span class="token punctuation">.</span>age<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//降序</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组方法</title>
      <link href="2020/06/30/jsarra/"/>
      <url>2020/06/30/jsarra/</url>
      
        <content type="html"><![CDATA[<p>js把一个数组内容插入到另一个数组的指定位置</p><pre class="line-numbers language-javaScript" data-language="javaScript"><code class="language-javaScript">let arr1 = ['a', 'b', 'c']; let arr2 = ['1', '2', '3']; // 把arr2 变成一个适合splice的数组（包含splice前2个参数的数组）arr2.unshift(2, 0); // ------------------ 这里的数字控制插入的位置-------------------------console.log(arr2); //[2, 0, "1", "2", "3"]Array.prototype.splice.apply(arr1, arr2); console.log(arr1); //["a", "b", "1", "2", "3", "c"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组方法</title>
      <link href="2020/06/30/jsarrb/"/>
      <url>2020/06/30/jsarrb/</url>
      
        <content type="html"><![CDATA[<h3 id="输入一个数值，返回数组项最接近的一项"><a href="#输入一个数值，返回数组项最接近的一项" class="headerlink" title="输入一个数值，返回数组项最接近的一项"></a>输入一个数值，返回数组项最接近的一项</h3><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">const lookupNear = (array, value) =&gt; {  // 将原数组复制，不会影响原数组  let arr = array.concat([]);  arr.push(value);  // 数据排序  arr.sort((a, b) =&gt; {    return a - b;  });  let index = arr.indexOf(value);  // 当前项在数组第一项 / 最后一项，返回当前项的后一项 / 前一项  if (index === 0) {    // return arr[index + 1];    return index+1  } else if (index === array.length - 1) {    // return arr[index - 1];    return index-1  }  //   console.log(arr)  // 当前项和前一项或者后一项比较，返回差值小的项  //   console.log(arr[index - 1],arr[index],arr[index + 1])  let resultIndex =    arr[index] - arr[index - 1] &gt; arr[index + 1] - arr[index] ?    index + 1 :    index - 1;  //   console.log( arr[resultIndex],resultIndex)  // return arr[resultIndex];  return resultIndex}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取中心点和缩放级别</title>
      <link href="2020/06/30/mapfun/"/>
      <url>2020/06/30/mapfun/</url>
      
        <content type="html"><![CDATA[<h3 id="获取中心点和缩放级别"><a href="#获取中心点和缩放级别" class="headerlink" title="获取中心点和缩放级别"></a>获取中心点和缩放级别</h3><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">// 获取中心点和缩放级别let getCenterAndZoom=(maxJ, minJ, maxW, minW,i)=&gt;{  var centerLongitude = ((parseFloat(minJ) + parseFloat(maxJ)) / 2).toFixed(5);    var centerLatitude = ((parseFloat(minW) + parseFloat(maxW)) / 2).toFixed(5);    let zoom = getCenterPoint(maxJ, minJ, maxW, minW)    if(i){      zoom+=1    }    //如果经纬度在array中不是数字类型，需要转化为数字类型进行计算，如果是可以去掉parseFloat处理    //console.log(centerLongitude+"kkk"+centerLatitude);    return [centerLongitude, centerLatitude, zoom];}let getCenterPoint=(maxJ, minJ, maxW, minW)=&gt;{ //通过经纬度获取中心位置和缩放级别  let dd=getDistance(maxW,maxJ,minW,minJ)  var diffArr = &nbsp;[0.01, 0.02, 0.05, 0.05, 0.1, 0.2, 0.5, 1, 2, 5, 10, 20, 50, 50, 100, 200, 500, 1000]  for (var i = 0; i &lt; diffArr.length; i++) {    if (diffArr[i] - dd &gt; 0) {      // 18 - i + 3      return 19 - i + 3; //之所以会多4，是因为地图范围常常是比例尺距离的10倍以上。所以级别会增加4。    }  }}// 根据两点经纬度计算距离const getDistance = (lat1, lng1, lat2, lng2) =&gt; {  var radLat1 = lat1 * Math.PI / 180.0;  var radLat2 = lat2 * Math.PI / 180.0;  var a = radLat1 - radLat2;  var b = lng1 * Math.PI / 180.0 - lng2 * Math.PI / 180.0;  var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) +    Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2)));  s = s * 6378.137; // EARTH_RADIUS;  s = Math.round(s * 10000) / 10000;  return s;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git 上传node_modules</title>
      <link href="2020/06/29/git-yu-node-m/"/>
      <url>2020/06/29/git-yu-node-m/</url>
      
        <content type="html"><![CDATA[<p>首先，在项目目录下打开git Bash Here，输入命令：touch .gitignore</p><p>完成后项目中会出现一个后缀名“.gitignore”为的文件</p><p>打开该文件，生成文件的时候已经自动配置好了，接下来提交代码的时候就可以放心提交了，不会再将node_modules文件夹提交上去</p><pre class="line-numbers language-none"><code class="language-none">node_modules/   表示过滤这个文件夹*.zip   过滤zip后缀文件demo.html   过滤该文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>node_modules一般过大，不适合提交git，建议后期还是<font color="blue"> install </font>比较好</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>提示Your branch is up-to-date with &#39;origin/master&#39; 该怎么办</title>
      <link href="2020/06/28/git-bao-cuo/"/>
      <url>2020/06/28/git-bao-cuo/</url>
      
        <content type="html"><![CDATA[<p>创建并切换到新分支</p><pre class="line-numbers language-none"><code class="language-none">git checkout -b newbranch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后将你的改动提交到新分支上</p><pre class="line-numbers language-none"><code class="language-none">git add . git commit -m "new"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后切换到主分支</p><pre class="line-numbers language-none"><code class="language-none">git checkout master <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后将新分支提交的改动合并到主分支上</p><pre class="line-numbers language-none"><code class="language-none">git merge newbranch <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后就可以push代码了</p><pre class="line-numbers language-none"><code class="language-none">git push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后还可以删除这个分支</p><pre class="line-numbers language-none"><code class="language-none">git branch -D newbranch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git基础使用</title>
      <link href="2020/06/28/git-ji-chu/"/>
      <url>2020/06/28/git-ji-chu/</url>
      
        <content type="html"><![CDATA[<h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git status  // 查看与上次提交的区别git add xxx // 要提交的文件名 或 git add . 当前目录下所有内容git commit -m <span class="token string">"提交说明"</span>git push origin﻿ master  //提交到主分支  注* 首次提交 git push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git branch xxx //创建分支git checkout xxx // 切换分支git checkout -b xxx //创建并切换分支 注* 分支提交时需先切换到分支<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="多人开发"><a href="#多人开发" class="headerlink" title="多人开发"></a>多人开发</h2><p>先将自己的内容提交到分支上</p><h3 id="合并时先切换到主分支"><a href="#合并时先切换到主分支" class="headerlink" title="合并时先切换到主分支"></a>合并时先切换到主分支</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git checkout master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git merge xxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="提交合并"><a href="#提交合并" class="headerlink" title="提交合并"></a>提交合并</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git push  ==&gt;失败时git pull 拉取在本地编辑器查看合并修改冲突<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="重新执行提交"><a href="#重新执行提交" class="headerlink" title="重新执行提交"></a>重新执行提交</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git branch -b xxx 删除分支<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="本地Git-与远程关系的绑定"><a href="#本地Git-与远程关系的绑定" class="headerlink" title="本地Git 与远程关系的绑定"></a>本地Git 与远程关系的绑定</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git remote -v 查看本地git 信息git remote rm origin 删除本地仓库当前关联的远程仓库git remote add origin 地址 =》重新添加绑定注: 重新绑定后push提交时 git push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地图坐标文件</title>
      <link href="2019/12/01/mapfile/"/>
      <url>2019/12/01/mapfile/</url>
      
        <content type="html"><![CDATA[<p>中国及各省地图坐标 json文件 导出<br><a href="http://datav.aliyun.com/tools/atlas/#&amp;lat=33.50475906922609&amp;lng=104.32617187499999&amp;zoom=4">http://datav.aliyun.com/tools/atlas/#&amp;lat=33.50475906922609&amp;lng=104.32617187499999&amp;zoom=4</a><br>高德地图错误码<br><a href="https://lbs.amap.com/api/webservice/guide/tools/info/">https://lbs.amap.com/api/webservice/guide/tools/info/</a><br>高德地图部分接口<br><a href="https://lbs.amap.com/api/webservice/guide/api/georege">https://lbs.amap.com/api/webservice/guide/api/georege</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
